"use strict";var TcHmi,__runInitializers=this&&this.__runInitializers||function(thisArg,initializers,value){for(var useValue=arguments.length>2,i=0;i<initializers.length;i++)value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg);return useValue?value:void 0},__esDecorate=this&&this.__esDecorate||function(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(void 0!==f&&"function"!=typeof f)throw new TypeError("Function expected");return f}for(var _,kind=contextIn.kind,key="getter"===kind?"get":"setter"===kind?"set":"value",target=!descriptorIn&&ctor?contextIn.static?ctor:ctor.prototype:null,descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{}),done=!1,i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]="access"===p?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])("accessor"===kind?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if("accessor"===kind){if(void 0===result)continue;if(null===result||"object"!=typeof result)throw new TypeError("Object expected");(_=accept(result.get))&&(descriptor.get=_),(_=accept(result.set))&&(descriptor.set=_),(_=accept(result.init))&&initializers.unshift(_)}else(_=accept(result))&&("field"===kind?initializers.unshift(_):descriptor[key]=_)}target&&Object.defineProperty(target,contextIn.name,descriptor),done=!0};!function(TcHmi){!function(Controls){!function(Beckhoff){!function(Industries){!function(Common){let TcHmiIndicatorLight=(()=>{let ___onStateSymbolWatch_decorators,___onResolverForActiveColorWatchCallback_decorators,___onResolverForInactiveColorWatchCallback_decorators,_classSuper=TcHmi.Controls.System.TcHmiControl,_instanceExtraInitializers=[];return class TcHmiIndicatorLight extends _classSuper{static{const _metadata="function"==typeof Symbol&&Symbol.metadata?Object.create(_classSuper[Symbol.metadata]??null):void 0;___onStateSymbolWatch_decorators=[TcHmi.CallbackMethod],___onResolverForActiveColorWatchCallback_decorators=[TcHmi.CallbackMethod],___onResolverForInactiveColorWatchCallback_decorators=[TcHmi.CallbackMethod],__esDecorate(this,null,___onStateSymbolWatch_decorators,{kind:"method",name:"__onStateSymbolWatch",static:!1,private:!1,access:{has:obj=>"__onStateSymbolWatch"in obj,get:obj=>obj.__onStateSymbolWatch},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,___onResolverForActiveColorWatchCallback_decorators,{kind:"method",name:"__onResolverForActiveColorWatchCallback",static:!1,private:!1,access:{has:obj=>"__onResolverForActiveColorWatchCallback"in obj,get:obj=>obj.__onResolverForActiveColorWatchCallback},metadata:_metadata},null,_instanceExtraInitializers),__esDecorate(this,null,___onResolverForInactiveColorWatchCallback_decorators,{kind:"method",name:"__onResolverForInactiveColorWatchCallback",static:!1,private:!1,access:{has:obj=>"__onResolverForInactiveColorWatchCallback"in obj,get:obj=>obj.__onResolverForInactiveColorWatchCallback},metadata:_metadata},null,_instanceExtraInitializers),_metadata&&Object.defineProperty(this,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:_metadata})}static#tchmiFQN="TcHmi.Controls.Beckhoff.Industries.Common."+this.name;constructor(element,pcElement,attrs){super(element,pcElement,attrs)}__stateSymbol=__runInitializers(this,_instanceExtraInitializers);__activeColor;__inactiveColor;__destroyStateSymbolWatch=null;__previnit(){super.__previnit()}__init(){super.__init()}__attach(){super.__attach(),this.__stateSymbol&&!this.__destroyStateSymbolWatch&&(this.__destroyStateSymbolWatch=this.__stateSymbol.watch(this.__onStateSymbolWatch))}__detach(){super.__detach(),this.__destroyStateSymbolWatch&&(this.__destroyStateSymbolWatch(),this.__destroyStateSymbolWatch=null)}destroy(){this.__keepAlive||(this.__destroyStateSymbolWatch&&(this.__destroyStateSymbolWatch(),this.__destroyStateSymbolWatch=null),this.__stateSymbol&&this.__stateSymbol.destroy(),super.destroy())}setStateSymbol(valueNew){let newSymbol=valueNew;if(null===newSymbol){let symbolExpression=this.getAttributeDefaultValueInternal("StateSymbol");symbolExpression&&(newSymbol=new TcHmi.Symbol(symbolExpression))}if(this.__stateSymbol!==newSymbol){if(this.__destroyStateSymbolWatch&&(this.__destroyStateSymbolWatch(),this.__destroyStateSymbolWatch=null),this.__stateSymbol&&this.__stateSymbol.destroy(),newSymbol instanceof TcHmi.Symbol)if(this.__stateSymbol=newSymbol,this.__isAttached)this.__destroyStateSymbolWatch=this.__stateSymbol.watch(this.__onStateSymbolWatch);else{let referenceDelegation=this.__stateSymbol.getReferenceDelegation();referenceDelegation&&(referenceDelegation.preload=done=>{this.__stateSymbol?.readEx2({forceParallel:!0,forceReadWriteGroup:"TCHMI_BINDING_PRELOAD"},(data=>{this.__processStateSymbolResult(data),done()}))})}else this.__stateSymbol,this.__stateSymbol=null,this.__element[0].classList.remove("active");TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"StateSymbol"})}}getStateSymbol(){return this.__stateSymbol}__onStateSymbolWatch(data){this.__processStateSymbolResult(data)}__processStateSymbolResult(data){data.error!==TcHmi.Errors.NONE&&data.details&&TcHmi.Log.Controls.error(this,TcHmiIndicatorLight.#tchmiFQN,{Attribute:"StateSymbol",Symbol:this.__stateSymbol?.getExpression().toString()},TcHmi.Log.buildMessage(data.details)),this.__element[0].classList.toggle("active",data.value)}setActiveColor(valueNew){let convertedValue=TcHmi.ValueConverter.toObject(valueNew);null===convertedValue&&(convertedValue=this.getAttributeDefaultValueInternal("ActiveColor"));let resolverInfo=this.__objectResolvers.get("activeColor");resolverInfo&&(resolverInfo.watchDestroyer&&resolverInfo.watchDestroyer(),resolverInfo.resolver.destroy());let resolver=new TcHmi.Symbol.ObjectResolver(convertedValue,{parentControl:this,type:this.getAttributeDescription("ActiveColor")?.type});this.__objectResolvers.set("activeColor",{resolver,watchCallback:this.__onResolverForActiveColorWatchCallback,watchDestroyer:resolver.watch(this.__onResolverForActiveColorWatchCallback)})}__onResolverForActiveColorWatchCallback(data){this.__isAttached||this.__suspendObjectResolver("activeColor"),data.error===TcHmi.Errors.NONE?tchmi_equal(data.value,this.__activeColor)||(this.__activeColor=data.value,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"ActiveColor"}),this.__processActiveColor()):TcHmi.Log.Controls.error(this,TcHmiIndicatorLight.#tchmiFQN,{Attribute:"ActiveColor"},`Resolving symbols from object failed with error: ${TcHmi.Log.buildMessage(data.details)}`)}getActiveColor(){return this.__activeColor}__processActiveColor(){TcHmi.isSolidColor(this.__activeColor)?this.__element[0].style.setProperty("--tchmi-indicator-color-active",TcHmi.StyleProvider.resolveSolidColorAsCssValue(this.__activeColor)):this.__element[0].style.removeProperty("--tchmi-indicator-color-active")}setInactiveColor(valueNew){let convertedValue=TcHmi.ValueConverter.toObject(valueNew);null===convertedValue&&(convertedValue=this.getAttributeDefaultValueInternal("InactiveColor"));let resolverInfo=this.__objectResolvers.get("inactiveColor");resolverInfo&&(resolverInfo.watchDestroyer&&resolverInfo.watchDestroyer(),resolverInfo.resolver.destroy());let resolver=new TcHmi.Symbol.ObjectResolver(convertedValue,{parentControl:this,type:this.getAttributeDescription("InactiveColor")?.type});this.__objectResolvers.set("inactiveColor",{resolver,watchCallback:this.__onResolverForInactiveColorWatchCallback,watchDestroyer:resolver.watch(this.__onResolverForInactiveColorWatchCallback)})}__onResolverForInactiveColorWatchCallback(data){this.__isAttached||this.__suspendObjectResolver("inactiveColor"),data.error===TcHmi.Errors.NONE?tchmi_equal(data.value,this.__inactiveColor)||(this.__inactiveColor=data.value,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"InactiveColor"}),this.__processInactiveColor()):TcHmi.Log.Controls.error(this,TcHmiIndicatorLight.#tchmiFQN,{Attribute:"InactiveColor"},`Resolving symbols from object failed with error: ${TcHmi.Log.buildMessage(data.details)}`)}getInactiveColor(){return this.__inactiveColor}__processInactiveColor(){TcHmi.isSolidColor(this.__inactiveColor)?this.__element[0].style.setProperty("--tchmi-indicator-color-inactive",TcHmi.StyleProvider.resolveSolidColorAsCssValue(this.__inactiveColor)):this.__element[0].style.removeProperty("--tchmi-indicator-color-inactive")}}})();Common.TcHmiIndicatorLight=TcHmiIndicatorLight}(Industries.Common||(Industries.Common={}))}(Beckhoff.Industries||(Beckhoff.Industries={}))}(Controls.Beckhoff||(Controls.Beckhoff={}))}(TcHmi.Controls||(TcHmi.Controls={}))}(TcHmi||(TcHmi={})),TcHmi.Controls.registerEx("TcHmiIndicatorLight","TcHmi.Controls.Beckhoff.Industries.Common",TcHmi.Controls.Beckhoff.Industries.Common.TcHmiIndicatorLight);